package at.ac.tuwien.igw.tuio {		import flash.utils.ByteArray;	import flash.net.LocalConnection;	import at.ac.tuwien.igw.osc.*;		/**	 * A Class for receiving TUIO Messages via LocalConnection	 * @author Immanuel Bauer	 */	public class TUIOReceiver {				private var listener:Function;		private var debugListener:Function;		private var currentPacket:OSCBundle;		private var localConnection:LocalConnection;				public function TUIOReceiver() {			super();		}				public function start():Boolean {			try {				this.stop();				this.localConnection = new LocalConnection();								this.localConnection.allowDomain('*');				this.localConnection.client = this;				this.localConnection.connect("_TuioOscDataStream");								return true;			} catch (e:Error) {				return false;			}			return false;		}				public function stop():Boolean {			try {				if (this.localConnection != null) {					this.localConnection.close();				}				return true;			} catch (e:Error) {				return false;			}			return false;		}				public function receiveTuioOscData(packet:ByteArray):void {			if(packet != null){				if(OSCBundle.isBundle(packet)){					this.currentPacket = new OSCBundle(packet);					if (this.debugListener != null) {						this.debugListener.call(NaN, "\nreceived:" + this.currentPacket.getPacketInfo());					}					if (this.listener != null) {						var msgArray:Array = new Array();						for each(var item in this.currentPacket.subPackets) {							if (item is OSCMessage) msgArray.push(item);						}						this.listener.call(NaN, msgArray);					}				} else {					if (this.debugListener != null) {						this.debugListener.call(NaN, "\nreceived: invalid tuio packet.");					}				}			}		}				public function addReceiveListener(l:Function):void {			this.listener = l;		}				public function addDebugListener(l:Function):void {			this.debugListener = l;		}			}	}